using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Certamen2
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int[] arr = new int[5];
            int[] mayor = new int[5];
            Console.WriteLine("Ingrese 5 numeros: ");
            int valor = 0;

            string[,] matriz = new string[8, 8];
            int bandera = matriz.GetLength(0)/2;

            var random = new Random();
            int[] vector = new int[10];
            int posicion_valor_mayor = 0;
            int posicion_valor_menor = 0;


            for (int i = 0; i < arr.Length; i++)
            {
                arr[i] = int.Parse(Console.ReadLine());
                if (arr[i] > mayor[i])
                {
                    mayor[i] = arr[i];

                }
            }

            Console.WriteLine("Ingrese un valor adicional: ");
            valor = int.Parse(Console.ReadLine());

            Console.WriteLine("Valor: " + valor);


            for (int i = 0; i < arr.Length; i++)
            {
                if (arr[i] > valor)

                {
                    Console.WriteLine("Resultado: " + mayor[i]);
                }
            }             

            imprimir(matriz);
            

            for (int i = 0; i < matriz.GetLength(0); i++)
            {
                for (int j = 0; j < matriz.GetLength(1); j++)
                {
                    if (i == bandera || i == bandera - 1)
                        matriz[i, j] = "1";

                    else if (j == bandera || j == bandera - 1) { 
                        matriz[i, j] = "1";
                }
                    else
                    {
                    matriz[i, j] = "0";
                    }    
                }
                         

        }

            imprimir(matriz);
            Console.WriteLine();



            for (int i = 0; i < vector.Length; i++)
            {
                vector[i] = random.Next(50, 200);
                posicion_valor_mayor = Array.IndexOf(vector, vector.Max());
                posicion_valor_menor = Array.IndexOf(vector, vector.Min());
            }


            ImprimeVector(vector);
            Console.WriteLine();

            Console.WriteLine("Mayor:" + posicion_valor_mayor);
            Console.WriteLine("Menor:" + posicion_valor_menor);


            Console.ReadKey();

        }
        static void imprimir(string[,] matriz)
        {
            for (int i = 0; i < matriz.GetLength(0); i++)
            {
                for (int j = 0; j < matriz.GetLength(0); j++)
                {
                    Console.Write(matriz[i, j] + "");
                }
                Console.WriteLine();
            }
        }
        static void ImprimeVector(int[] vector)
        {
            for (int i = 0; i < vector.Length; i++)
            {
                Console.Write(vector[i] + " ");
            }
        }
    }
}


